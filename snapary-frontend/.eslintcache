[{"C:\\snapary\\snapary-frontend\\src\\index.js":"1","C:\\snapary\\snapary-frontend\\src\\App.js":"2","C:\\snapary\\snapary-frontend\\src\\pages\\Home\\Home.js":"3","C:\\snapary\\snapary-frontend\\src\\components\\Header\\Header.js":"4","C:\\snapary\\snapary-frontend\\src\\components\\Footer\\Footer.js":"5","C:\\snapary\\snapary-frontend\\src\\pages\\Register\\Register.js":"6","C:\\snapary\\snapary-frontend\\src\\pages\\Login\\Login.js":"7","C:\\snapary\\snapary-frontend\\src\\pages\\History\\History.js":"8","C:\\snapary\\snapary-frontend\\src\\pages\\Alert\\Alert.js":"9","C:\\snapary\\snapary-frontend\\src\\pages\\Post\\Post.js":"10","C:\\snapary\\snapary-frontend\\src\\components\\Maps\\MapContainer.js":"11"},{"size":197,"mtime":1611429873844,"results":"12","hashOfConfig":"13"},{"size":966,"mtime":1611474370835,"results":"14","hashOfConfig":"13"},{"size":1018,"mtime":1611474280591,"results":"15","hashOfConfig":"13"},{"size":2907,"mtime":1611471108124,"results":"16","hashOfConfig":"13"},{"size":733,"mtime":1611388263309,"results":"17","hashOfConfig":"13"},{"size":3275,"mtime":1611474777821,"results":"18","hashOfConfig":"13"},{"size":2888,"mtime":1611474701505,"results":"19","hashOfConfig":"13"},{"size":3553,"mtime":1611477471141,"results":"20","hashOfConfig":"13"},{"size":1478,"mtime":1611478281000,"results":"21","hashOfConfig":"13"},{"size":6798,"mtime":1611477123208,"results":"22","hashOfConfig":"13"},{"size":2257,"mtime":1611462882832,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1qvqaz6",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\snapary\\snapary-frontend\\src\\index.js",[],["52","53"],"C:\\snapary\\snapary-frontend\\src\\App.js",["54"],"import React from 'react'\r\nimport './App.css';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport Home from './pages/Home/Home'\r\nimport Register from \"./pages/Register/Register\"\r\nimport Login from \"./pages/Login/Login\"\r\nimport Alert from \"./pages/Alert/Alert\"\r\nimport History from \"./pages/History/History\"\r\nimport Post from \"./pages/Post/Post\"\r\nimport Header from './components/Header/Header'\r\nimport Footer from './components/Footer/Footer'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/register' exact component={Register} />\r\n        <Route path='/login' exact component={Login} />\r\n        <Route path='/alert' exact component={Alert} />\r\n        <Route path='/history' exact component={History} />\r\n        <Route path='/post' exact component={Post} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\snapary\\snapary-frontend\\src\\pages\\Home\\Home.js",[],"C:\\snapary\\snapary-frontend\\src\\components\\Header\\Header.js",["55"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaBars, FaTimes } from 'react-icons/fa';\r\nimport './Header.css'\r\nimport Logo from '../../images/logo.png'\r\nimport { IconContext } from 'react-icons/lib'\r\n\r\nfunction Header() {\r\n    const [click, setClick] = useState(false);\r\n    const [login, setLogin] = useState(false);\r\n    const [option, setOption] = useState(['/', '/login', '/register', '/post', '/alert', '/history']);\r\n    const [current, setCurrent] = useState('/');\r\n\r\n    var getText = (url) => {\r\n        if (url === '/') {\r\n            return 'Home'\r\n        }\r\n        if (url === '/post') {\r\n            return 'Post'\r\n        }\r\n        if (url === '/login') {\r\n            return 'Log in'\r\n        }\r\n        if (url === '/register') {\r\n            return 'Register'\r\n        }\r\n        if (url === '/history') {\r\n            return 'History'\r\n        }\r\n        if (url === '/alert') {\r\n            return 'Alert'\r\n        }\r\n    }\r\n\r\n    const listRender = (list) => list.map((entry) => \r\n        <li className=\"nav-item\">\r\n            <Link to={entry} className=\"nav-links\" onClick={()=>clicked(entry)}>\r\n                {getText(entry)}\r\n            </Link>\r\n        </li>);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n    const clicked = (link) => {\r\n        closeMobileMenu();\r\n        setCurrent(link);\r\n    }\r\n\r\n    const checkLogin = (event) => {\r\n        fetch('https://snapary.roydu.ca/api/user/status', {\r\n            method: 'POST'\r\n          }).then(response => {response.json().then(data => {\r\n              console.log(data);\r\n              if (data[\"loginStatus\"])\r\n              {\r\n                setLogin(true);\r\n              }\r\n        })});\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkLogin();\r\n        if (login) {\r\n            setOption(['/', '/post', '/alert', '/history'])\r\n        }\r\n     }, [current]);\r\n\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{ color: '#374785' }}>\r\n                <div className=\"navbar\">\r\n                    <div className=\"navbar-container\">\r\n                        <Link to='/' className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n                            <img src={Logo} alt=\"PurrtectorLogo\" width=\"236px\" height=\"180\" className='navbar-icon' />\r\n                        </Link>\r\n                        <div className=\"menu-icon\" onClick={handleClick}>\r\n                            {click ? <FaTimes className=\"pink\" /> : <FaBars className=\"pink\" />}\r\n                        </div>\r\n                        <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                            {listRender(option)}\r\n                        </ul>    \r\n                    </div>\r\n                </div>\r\n            </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\snapary\\snapary-frontend\\src\\components\\Footer\\Footer.js",[],"C:\\snapary\\snapary-frontend\\src\\pages\\Register\\Register.js",[],"C:\\snapary\\snapary-frontend\\src\\pages\\Login\\Login.js",["56"],"import React, { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Logo from  '../../images/YEET1.png';\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    let history = useHistory();\r\n\r\n    function validateForm() {\r\n        return username.length > 0 && password.length > 0;\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        var jsonData = JSON.stringify({'username': username, 'password': password});\r\n        console.log(jsonData);\r\n\r\n        fetch('https://snapary.roydu.ca/api/user/signin', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': \"*\"\r\n            },\r\n            body: JSON.stringify(jsonData)\r\n          }).then(response => {response.json().then(data => {\r\n              console.log(data);\r\n              if (data[\"success\"])\r\n              {\r\n                history.push('/alert')\r\n              }\r\n        })});\r\n\r\n        event.preventDefault();\r\n    }\r\n        \r\n    \r\n    return (\r\n        <>\r\n            <div className=\"login-bg\">\r\n                <div className=\"logo\">\r\n                    <img alt=\"logo\" src={Logo} width=\"350px\" height=\"220px\" />\r\n                </div>\r\n                <div className=\"Login\">\r\n                    <Form>\r\n                        <Form.Group size=\"lg\" controlId=\"username\">\r\n                            <Form.Label style={{\"fontWeight\": \"700\", \"fontSize\": \"40\", \"lineHeight\": \"3\"}}>Username</Form.Label>\r\n                            <Form.Control\r\n                                autoFocus\r\n                                type=\"username\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"lg\" controlId=\"password\">\r\n                            <Form.Label style={{\"fontWeight\": \"700\", \"fontSize\": \"40\", \"lineHeight\": \"3\"}}>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()} onClick={handleSubmit}>\r\n                            Login\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login","C:\\snapary\\snapary-frontend\\src\\pages\\History\\History.js",["57","58","59","60","61"],"import React, {useEffect, useState} from 'react'\r\nimport './History.css'\r\nimport DatePicker from \"react-datepicker\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\"\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Emojis from 'react-emoji-component'\r\n\r\nfunction History() {\r\n    const listitems = (history) => history.map((entry) => \r\n        <ListGroup.Item action variant=\"light\">\r\n            {entry}\r\n        </ListGroup.Item>);\r\n    \r\n    const listy = (events) => {\r\n        let result = [];\r\n        let emos = [];\r\n        let target = [];\r\n        console.log(events);\r\n        for (var i = events.length-1; i >= 0; i--)\r\n        {\r\n            console.log(events[i]);\r\n            let str = \"Visited \" + events[i][\"area\"] + \" at \" + events[i][\"time\"];\r\n            result.push(str);\r\n            emos.push(getEmo(events[i][\"emo\"]));\r\n        }\r\n        for (var j = 0; j < result.length; j++)\r\n        {\r\n            target.push(\r\n                <ListGroup.Item action variant=\"light\">\r\n                {result[j]} {emos[j]}\r\n                </ListGroup.Item>\r\n            )\r\n        }\r\n        return target;\r\n    }\r\n\r\n    const getEmo = (i) => {\r\n        console.log(i);\r\n        if (i === 1) {\r\n            return (<Emojis size={50}>😎</Emojis>);\r\n        }\r\n        if (i === 2) {\r\n            return (<Emojis size={50}>😭</Emojis>);\r\n        }\r\n        if (i === 3) {\r\n            return (<Emojis size={50}>🤩</Emojis>);\r\n        }\r\n        if (i === 4) {\r\n            return (<Emojis size={50}>😱</Emojis>);\r\n        }\r\n        if (i === 5) {\r\n            return (<Emojis size={50}>🥳</Emojis>);\r\n        }\r\n        if (i === 6) {\r\n            return (<Emojis size={50}>🤢</Emojis>);\r\n        }\r\n        if (i === 7) {\r\n            return (<Emojis size={50}>😴</Emojis>);\r\n        }\r\n        if (i === 8) {\r\n            return (<Emojis size={50}>😡</Emojis>);\r\n        }\r\n        if (i === 9) {\r\n            return (<Emojis size={50}>💩</Emojis>);\r\n        }\r\n        if (i === 10) {\r\n            return (<Emojis size={50}>🤡</Emojis>);\r\n        }\r\n        if (i === 11) {\r\n            return (<Emojis size={50}>❤️</Emojis>);\r\n        }\r\n        if (i === 12) {\r\n            return (<Emojis size={50}>🌈</Emojis>);\r\n        }\r\n        else {\r\n            return \":)\";\r\n        }\r\n    }\r\n    \r\n    const [date, setDate] = useState(new Date());\r\n    const [entries, setEntries] = useState(['ahh']);\r\n    const history1 = ['Example','I am happy', 'Meh ok', 'Died', 'Alive again', 'Doing well, maybe'];\r\n    \r\n    const handleSelect = (date) => {\r\n        console.log(date);\r\n        setEntries(listitems(history1));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://snapary.roydu.ca/api/user/getHistory\").then(response =>\r\n          response.json().then(data => {\r\n              console.log(\"fetcheeeed!\");\r\n            setEntries(listy(data[\"history\"]));\r\n          })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"history-bg\">\r\n                <div className=\"title-row\">\r\n                    <div className=\"title-col\">\r\n                        <div className=\"title-line\">\r\n                            📚 View Your Diaries\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"list-group\">\r\n                    <ListGroup>\r\n                        {entries}\r\n                    </ListGroup>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default History\r\n","C:\\snapary\\snapary-frontend\\src\\pages\\Alert\\Alert.js",["62"],"import React, { useEffect, useState } from 'react'\r\nimport { FaExclamationCircle } from 'react-icons/fa';\r\nimport './Alert.css'\r\n\r\nfunction Alert() {\r\n    const [alert, setAlert] = useState(<div className=\"alert-message\">No Alert</div>);\r\n    const processData = (data) => {\r\n        if (data[\"alert\"])\r\n        {\r\n            let list = []\r\n            for (var key in data[\"infected_areas\"])\r\n            {\r\n                let str = key;\r\n                str.concat(\": \", data[\"infected_areas\"][key]);\r\n                list.push(str);\r\n            }\r\n            return listitems(list);\r\n        }\r\n        else\r\n        {\r\n            return listitems([\"No alert\"]);\r\n        }\r\n    }\r\n\r\n    const listitems = (history) => history.map((entry) => \r\n        <div className=\"alert-message\">\r\n            {entry}\r\n        </div>);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://snapary.roydu.ca/api/user/alert\").then(response =>\r\n          response.json().then(data => {\r\n              setAlert(processData(data));\r\n          })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"alert-bg\">\r\n                <div className=\"alert-message\">\r\n                    See any area affected by covid cases below\r\n                </div>\r\n                <div className=\"alert-img\">\r\n                    <FaExclamationCircle size={80} />\r\n                </div>\r\n                {alert}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","C:\\snapary\\snapary-frontend\\src\\pages\\Post\\Post.js",[],"C:\\snapary\\snapary-frontend\\src\\components\\Maps\\MapContainer.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":11,"column":8,"nodeType":"69","messageId":"70","endLine":11,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":66,"column":9,"nodeType":"73","endLine":66,"endColumn":18,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":18},{"ruleId":"67","severity":1,"message":"76","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":18},{"ruleId":"67","severity":1,"message":"77","line":80,"column":12,"nodeType":"69","messageId":"70","endLine":80,"endColumn":16},{"ruleId":"67","severity":1,"message":"78","line":80,"column":18,"nodeType":"69","messageId":"70","endLine":80,"endColumn":25},{"ruleId":"67","severity":1,"message":"79","line":84,"column":11,"nodeType":"69","messageId":"70","endLine":84,"endColumn":23},{"ruleId":"71","severity":1,"message":"80","line":96,"column":8,"nodeType":"73","endLine":96,"endColumn":10,"suggestions":"81"},{"ruleId":"71","severity":1,"message":"82","line":36,"column":8,"nodeType":"73","endLine":36,"endColumn":10,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'Redirect' is defined but never used.","'DatePicker' is defined but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listy'. Either include it or remove the dependency array.",["87"],"React Hook useEffect has a missing dependency: 'processData'. Either include it or remove the dependency array.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [current, login]",{"range":"95","text":"96"},"Update the dependencies array to be: [listy]",{"range":"97","text":"98"},"Update the dependencies array to be: [processData]",{"range":"99","text":"100"},[1953,1962],"[current, login]",[2926,2928],"[listy]",[1051,1053],"[processData]"]